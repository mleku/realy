// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package oapi

// Defines values for PostFilterParamsOrder.
const (
	PostFilterParamsOrderAsc  PostFilterParamsOrder = "asc"
	PostFilterParamsOrderDesc PostFilterParamsOrder = "desc"
)

// Defines values for PostFulltextParamsOrder.
const (
	PostFulltextParamsOrderAsc  PostFulltextParamsOrder = "asc"
	PostFulltextParamsOrderDesc PostFulltextParamsOrder = "desc"
)

// Event the primary unit of the nostr protocol, a self-signed JSON object that derives its id from a canonical ordered array
type Event struct {
	Content   *string     `json:"content,omitempty"`
	CreatedAt *int        `json:"created_at,omitempty"`
	Id        *string     `json:"id,omitempty"`
	Kind      *int        `json:"kind,omitempty"`
	Pubkey    *string     `json:"pubkey,omitempty"`
	Sig       *string     `json:"sig,omitempty"`
	Tags      *[][]string `json:"tags,omitempty"`
}

// Filter a simple filter structure used in request bodies to specify the parameters of a simple index search
type Filter struct {
	// Authors lists of hex encoded values, primarily for event Ids and public keys
	Authors *Ids      `json:"authors,omitempty"`
	Kinds   *[]int    `json:"kinds,omitempty"`
	Tags    *[]string `json:"tags,omitempty"`
}

// Ids lists of hex encoded values, primarily for event Ids and public keys
type Ids = []string

// AdminAuth defines model for AdminAuth.
type AdminAuth = string

// AlwaysAuth defines model for AlwaysAuth.
type AlwaysAuth = string

// Auth defines model for Auth.
type Auth = string

// NostrAccept defines model for NostrAccept.
type NostrAccept = string

// Upgrade defines model for Upgrade.
type Upgrade = string

// GetBackupParams defines parameters for GetBackup.
type GetBackupParams struct {
	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" for users on their own data (mandatory)
	Authorization AlwaysAuth `json:"Authorization"`
}

// GetEventIdParams defines parameters for GetEventId.
type GetEventIdParams struct {
	// Accept nostr json encoding
	Accept NostrAccept `json:"Accept"`

	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" (required as per relay configuration)
	Authorization *Auth `json:"Authorization,omitempty"`
}

// PostEventsParams defines parameters for PostEvents.
type PostEventsParams struct {
	// Accept nostr json encoding
	Accept NostrAccept `json:"Accept"`

	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" (required as per relay configuration)
	Authorization *Auth `json:"Authorization,omitempty"`
}

// PostExportParams defines parameters for PostExport.
type PostExportParams struct {
	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" for administrators (mandatory)
	Authorization AdminAuth `json:"Authorization"`
}

// PostFilterParams defines parameters for PostFilter.
type PostFilterParams struct {
	// Since only return events equal or greater than this unix timestamp
	Since *int `form:"since,omitempty" json:"since,omitempty"`

	// Until only return events equal or lesser than this unix timestamp
	Until *int `form:"until,omitempty" json:"until,omitempty"`

	// Limit only return this many events from the starting point in the set order. if unset, there is no limit
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Order return the results sorted by created_at in this direction
	Order *PostFilterParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Accept nostr json encoding
	Accept NostrAccept `json:"Accept"`

	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" (required as per relay configuration)
	Authorization *Auth `json:"Authorization,omitempty"`
}

// PostFilterParamsOrder defines parameters for PostFilter.
type PostFilterParamsOrder string

// PostFulltextParams defines parameters for PostFulltext.
type PostFulltextParams struct {
	// Search full text search based on a full text search index
	Search *int `form:"search,omitempty" json:"search,omitempty"`

	// Since only return events equal or greater than this unix timestamp
	Since *int `form:"since,omitempty" json:"since,omitempty"`

	// Until only return events equal or lesser than this unix timestamp
	Until *int `form:"until,omitempty" json:"until,omitempty"`

	// Limit only return this many events from the starting point in the set order. if unset, there is no limit
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Order return the results sorted by created_at in this direction
	Order *PostFulltextParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Accept nostr json encoding
	Accept NostrAccept `json:"Accept"`

	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" (required as per relay configuration)
	Authorization *Auth `json:"Authorization,omitempty"`
}

// PostFulltextParamsOrder defines parameters for PostFulltext.
type PostFulltextParamsOrder string

// PostImportParams defines parameters for PostImport.
type PostImportParams struct {
	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" for administrators (mandatory)
	Authorization AdminAuth `json:"Authorization"`
}

// GetNukeParams defines parameters for GetNuke.
type GetNukeParams struct {
	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" for administrators (mandatory)
	Authorization AdminAuth `json:"Authorization"`
}

// PostRelayParams defines parameters for PostRelay.
type PostRelayParams struct {
	// Accept nostr json encoding
	Accept NostrAccept `json:"Accept"`

	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" (required as per relay configuration)
	Authorization *Auth `json:"Authorization,omitempty"`
}

// GetShutdownParams defines parameters for GetShutdown.
type GetShutdownParams struct {
	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" for administrators (mandatory)
	Authorization AdminAuth `json:"Authorization"`
}

// PostStoreParams defines parameters for PostStore.
type PostStoreParams struct {
	// Accept nostr json encoding
	Accept NostrAccept `json:"Accept"`

	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" (required as per relay configuration)
	Authorization *Auth `json:"Authorization,omitempty"`
}

// PostSubscribeParams defines parameters for PostSubscribe.
type PostSubscribeParams struct {
	// Accept nostr json encoding
	Accept NostrAccept `json:"Accept"`

	// Authorization NIP-98 "Nostr <token>" or JWT "Bearer <token>" (required as per relay configuration)
	Authorization *Auth `json:"Authorization,omitempty"`

	// Upgrade websocket upgrade
	Upgrade Upgrade `json:"Upgrade"`
}

// PostEventsJSONRequestBody defines body for PostEvents for application/json ContentType.
type PostEventsJSONRequestBody = Ids

// PostExportJSONRequestBody defines body for PostExport for application/json ContentType.
type PostExportJSONRequestBody = Ids

// PostFilterJSONRequestBody defines body for PostFilter for application/json ContentType.
type PostFilterJSONRequestBody = Filter

// PostFulltextJSONRequestBody defines body for PostFulltext for application/json ContentType.
type PostFulltextJSONRequestBody = Filter

// PostRelayJSONRequestBody defines body for PostRelay for application/json ContentType.
type PostRelayJSONRequestBody = Event

// PostStoreJSONRequestBody defines body for PostStore for application/json ContentType.
type PostStoreJSONRequestBody = Event

// PostSubscribeJSONRequestBody defines body for PostSubscribe for application/json ContentType.
type PostSubscribeJSONRequestBody = Filter
